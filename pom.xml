<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <!-- JDK 8 -->
        <!--        <version>2.0.9.RELEASE</version>-->
        <!--        <version>2.1.18.RELEASE</version>-->
        <version>3.3.2</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.whosly</groupId>
	<artifactId>claude-stars-parent</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>${project.artifactId}</name>

	<properties>
		<java.version>1.8</java.version>
		<file.encoding>UTF-8</file.encoding>
		<project.build.sourceEncoding>${file.encoding}</project.build.sourceEncoding>
		<skipTest>true</skipTest>

		<apache.commons.lang3.version>3.9</apache.commons.lang3.version>
		<commons.collections4.version>4.0</commons.collections4.version>

        <calcite.version>1.39.0</calcite.version>
        <!-- Jul 26, 2023 -->
<!--        <calcite.version>1.35.0</calcite.version>-->
<!--        <calcite.version>1.36.0</calcite.version>-->
<!--        <calcite.version>1.38.0</calcite.version>-->
        <!-- 该版本的 avatica 1.26.0 与 httpclient5、httpcore5、jetty(9.4.56.v20240826) 适配  -->
        <avatica.version>1.26.0</avatica.version>

        <httpclient5.version>5.4.1</httpclient5.version>
        <httpcore5.version>5.3.1</httpcore5.version>

<!--		<google.guava.version>27.0.1-jre</google.guava.version>-->
		<google.guava.version>33.3.0-jre</google.guava.version>
		<hutool.version>5.6.1</hutool.version>
		<netty.version>4.1.94.Final</netty.version>
		<lombok.version>1.18.24</lombok.version>
        <mysql.version>8.3.0</mysql.version>

		<!-- test com.yueny.study.netty.application.client -->
		<junit.version>5.11.2</junit.version>
		<junit.jupiter.version>${junit.version}</junit.jupiter.version>
		<mockito.version>4.11.0</mockito.version>
		<jmh.version>1.36</jmh.version>
	</properties>

	<modules>
		<module>01.server-and-client</module>
		<module>02.server-and-client-application</module>
		<module>03.handler-decoder</module>
		<module>04.chat</module>
		<module>05.chats</module>
		<module>06.netty-buffer</module>
		<module>07.netty-channel</module>
		<!-- 使用比较优秀的编码解码技术MessagePack，高效编解码 -->
		<module>08.msgpack</module>
		<!-- Netty 可视化项目 -->
		<module>09.netty-see</module>
		<!-- Netty 内存分配器类 -->
		<module>11.netty-capacity</module>
		<!-- https://juejin.cn/post/7232905822278729783?from=search-suggest -->
		<!--		<module>05.web-socket</module>-->

		<module>41.load-parser-jj</module>
		<module>42.parser-jj-generator</module>
		<module>43.parser-generator</module>
		<module>44.auto-generator</module>
		<module>45.new-grammar</module>
		<module>46.calcite-schema</module>
		<module>47.calcite-rule</module>
		<module>48.avacita</module>

		<module>core</module>
		<module>utils</module>
	</modules>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-all</artifactId>
				<version>${netty.version}</version>
			</dependency>

			<!-- Unix Domain Socket (Linux/macOS) 本地域套接字支持 -->
			<!-- Linux x86_64 -->
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-transport-native-epoll</artifactId>
				<classifier>linux-x86_64</classifier>
				<version>${netty.version}</version>
			</dependency>
			<!-- Linux aarch64 -->
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-transport-native-epoll</artifactId>
				<classifier>linux-aarch_64</classifier>
				<version>${netty.version}</version>
			</dependency>
			<!-- macOS kqueue -->
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-transport-native-kqueue</artifactId>
				<version>${netty.version}</version>
			</dependency>

			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${apache.commons.lang3.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-io</artifactId>
				<version>1.3.2</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-collections4</artifactId>
				<version>${commons.collections4.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${google.guava.version}</version>
			</dependency>
			<dependency>
				<groupId>cn.hutool</groupId>
				<artifactId>hutool-all</artifactId>
				<version>${hutool.version}</version>
			</dependency>


            <dependency>
                <groupId>org.apache.calcite.avatica</groupId>
                <artifactId>avatica-core</artifactId>
                <version>${avatica.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.calcite.avatica</groupId>
                <artifactId>avatica-server</artifactId>
                <version>${avatica.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.calcite/calcite-core -->
            <dependency>
                <groupId>org.apache.calcite</groupId>
                <artifactId>calcite-core</artifactId>
                <version>${calcite.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.google.guava</groupId>
                        <artifactId>guava</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.calcite</groupId>
                <artifactId>calcite-server</artifactId>
                <version>${calcite.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.calcite</groupId>
                <artifactId>calcite-druid</artifactId>
                <version>${calcite.version}</version>
            </dependency>

            <dependency>
                <groupId>com.mysql</groupId>
                <artifactId>mysql-connector-j</artifactId>
                <version>${mysql.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.google.protobuf</groupId>
                        <artifactId>protobuf-java</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
			<!-- 连接池 -->
            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>5.0.1</version>
            </dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.7.36</version>
			</dependency>
			<!-- 使用兼容JDK 1.8的logback版本 -->
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>1.2.12</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>1.2.12</version>
			</dependency>

			<!-- test -->
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-bom</artifactId>
				<version>${mockito.version}</version>
				<type>pom</type>
				<scope>import</scope>
				<exclusions>
					<exclusion>
						<groupId>net.bytebuddy</groupId>
						<artifactId>byte-buddy</artifactId>
					</exclusion>
					<exclusion>
						<groupId>net.bytebuddy</groupId>
						<artifactId>byte-buddy-agent</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.junit</groupId>
				<artifactId>junit-bom</artifactId>
				<version>${junit.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- Mockito 对 JUnit 的支持 -->
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-junit-jupiter</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.vintage</groupId>
				<artifactId>junit-vintage-engine</artifactId>
				<version>${junit.jupiter.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter</artifactId>
				<version>${junit.jupiter.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.openjdk.jmh</groupId>
				<artifactId>jmh-core</artifactId>
				<version>${jmh.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.openjdk.jmh</groupId>
				<artifactId>jmh-generator-annprocess</artifactId>
				<version>${jmh.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<!-- 编译源代码 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.3</version>
					<configuration>
						<skip>${skipTest}</skip>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<encoding>${file.encoding}</encoding>
						<compilerVersion>${java.version}</compilerVersion>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.6.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.18.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.18.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.6</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>1.2.1</version>
				</plugin>

				<plugin>
                    <groupId>com.googlecode.fmpp-maven-plugin</groupId>
                    <artifactId>fmpp-maven-plugin</artifactId>
                    <version>1.0</version>
                    <configuration>
                        <cfgFile>src/main/codegen/config.fmpp</cfgFile>
                        <outputDirectory>${project.build.directory}/generated-sources/fmpp</outputDirectory>
                        <templateDirectory>src/main/codegen/templates</templateDirectory>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.freemarker</groupId>
                            <artifactId>freemarker</artifactId>
                            <version>2.3.28</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <id>generate-fmpp-sources</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- 使用javacc 扩展进行代码生成 -->
                <!-- generate the parser (Parser.jj is itself generated wit fmpp above) -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>javacc-maven-plugin</artifactId>
                    <version>3.1.0</version>
                    <executions>
                        <execution>
                            <id>javacc</id>
                            <goals>
                                <goal>javacc</goal>
                            </goals>
                            <configuration>
                                <sourceDirectory>${project.build.directory}/generated-sources/fmpp</sourceDirectory>
                                <includes>
                                    <include>**/*.jj</include>
                                </includes>
                                <lookAhead>1</lookAhead>
                                <isStatic>false</isStatic>
                                <outputDirectory>${project.build.directory}/generated-sources/javacc</outputDirectory>
                            </configuration>
                            <phase>generate-sources</phase>
                        </execution>
                        <execution>
                            <id>javacc-test</id>
                            <phase>generate-test-sources</phase>
                            <goals>
                                <goal>javacc</goal>
                            </goals>
                            <configuration>
                                <sourceDirectory>${project.build.directory}/generated-test-sources/fmpp</sourceDirectory>
                                <outputDirectory>${project.build.directory}/generated-test-sources/javacc</outputDirectory>
                                <includes>
                                    <include>**/Parser.jj</include>
                                </includes>
                                <lookAhead>2</lookAhead>
                                <isStatic>false</isStatic>
                                <ignoreCase>true</ignoreCase>
                                <unicodeInput>true</unicodeInput>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.7.1</version>
                    <executions>
                        <execution>
                            <id>unpack-parser-template</id>
                            <phase>initialize</phase>
                            <goals>
                                <goal>unpack</goal>
                            </goals>
                            <configuration>
                                <artifactItems>
                                    <artifactItem>
                                        <groupId>org.apache.calcite</groupId>
                                        <artifactId>calcite-core</artifactId>
                                        <version>${calcite.version}</version>
                                        <type>jar</type>
                                        <overWrite>true</overWrite>
                                        <outputDirectory>${project.build.directory}/</outputDirectory>
                                        <includes>**/Parser.jj</includes>
                                    </artifactItem>
                                </artifactItems>
                                <skip>false</skip>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.drill.tools</groupId>
                    <artifactId>drill-fmpp-maven-plugin</artifactId>
                    <version>1.21.2</version>
                    <executions>
                        <execution>
                            <configuration>
                                <config>src/main/codegen/config.fmpp</config>
                                <output>${project.build.directory}/generated-sources/fmpp</output>
                                <templates>src/main/codegen/templates</templates>
                            </configuration>
                            <id>generate-fmpp-sources</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
		</plugins>
	</build>


</project>
